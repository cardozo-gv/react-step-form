{"version":3,"sources":["components/FormUserDetails.js","components/FormPersonalDetails.js","components/Confirm.js","components/Success.js","components/UserForm.js","App.js","serviceWorker.js","index.js"],"names":["FormUserDetails","continue","e","preventDefault","_this","props","nextStep","_this$props","this","values","handleChange","react_default","a","createElement","MuiThemeProvider_default","Fragment","AppBar_default","title","TextField_default","hintText","floatingLabelText","onChange","defaultValue","firstName","lastName","email","RaisedButton_default","label","primary","style","styles","button","onClick","Component","margin","FormPersonalDetails","back","prevStep","occupations","city","bio","Confirm","_this$props$values","List","primaryText","secondaryText","Success","UserForm","state","step","setState","input","Object","defineProperty","target","value","_this$state","components_FormUserDetails","components_FormPersonalDetails","components_Confirm","components_Success","App","className","components_UserForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4058aeb7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport TextField from 'material-ui/TextField';\nimport RaisedButton from 'material-ui/RaisedButton';\n\n\n\nclass FormUserDetails extends Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  }\n  render(){\n    const { values, handleChange } = this.props;\n      return(\n        <MuiThemeProvider>\n\n          <React.Fragment>\n            <AppBar title=\"Enter user detail\"/>\n            <TextField\n              hintText=\"Enter your first name\"\n              floatingLabelText=\"First name\"\n              onChange={handleChange(\"firstName\")}\n              defaultValue={values.firstName}\n            />\n            <br/>\n            <TextField\n              hintText=\"Enter your last name\"\n              floatingLabelText=\"Last name\"\n              onChange={handleChange(\"lastName\")}\n              defaultValue={values.lastName}\n            />\n            <br/>\n            <TextField\n              hintText=\"Enter your email\"\n              floatingLabelText=\"email\"\n              onChange={handleChange(\"email\")}\n              defaultValue={values.email}\n            />\n            <br/>\n            <RaisedButton\n              label=\"Continue\"\n              primary={true}\n              style={styles.button}\n              onClick={this.continue}\n            />\n          </React.Fragment>\n        </MuiThemeProvider>\n      )\n  }\n}\n\nconst styles ={\n  button:{\n    margin:15\n  }\n}\nexport default FormUserDetails;\n","import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport TextField from 'material-ui/TextField';\nimport RaisedButton from 'material-ui/RaisedButton';\n\n\n\nclass FormPersonalDetails extends Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  }\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  }\n  render(){\n    const { values, handleChange } = this.props;\n      return(\n        <MuiThemeProvider>\n\n          <React.Fragment>\n            <AppBar title=\"Enter personal details\"/>\n            <TextField\n              hintText=\"Enter your occupation\"\n              floatingLabelText=\"Occupation\"\n              onChange={handleChange(\"occupations\")}\n              defaultValue={values.occupations}\n            />\n            <br/>\n            <TextField\n              hintText=\"Enter your city\"\n              floatingLabelText=\"City\"\n              onChange={handleChange(\"city\")}\n              defaultValue={values.city}\n            />\n            <br/>\n            <TextField\n              hintText=\"Enter your bio\"\n              floatingLabelText=\"Bio\"\n              onChange={handleChange(\"bio\")}\n              defaultValue={values.bio}\n            />\n            <br/>\n            <RaisedButton\n              label=\"Continue\"\n              primary={true}\n              style={styles.button}\n              onClick={this.continue}\n            />\n            <RaisedButton\n              label=\"Back\"\n              primary={false}\n              style={styles.button}\n              onClick={this.back}\n            />\n          </React.Fragment>\n        </MuiThemeProvider>\n      )\n  }\n}\n\nconst styles ={\n  button:{\n    margin:15\n  }\n}\nexport default FormPersonalDetails;\n","import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport {List, ListItem } from 'material-ui/List';\nimport RaisedButton from 'material-ui/RaisedButton';\n\n\n\nclass Confirm extends Component {\n  continue = e => {\n    e.preventDefault();\n\n    //Procesar el formulario\n    this.props.nextStep();\n  }\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  }\n  render(){\n    const { values: {firstName, lastName, email, occupations, city, bio} } = this.props;\n      return(\n        <MuiThemeProvider>\n          <React.Fragment>\n            <AppBar title=\"Confirm user data\"/>\n              <List>\n                <ListItem\n                  primaryText=\"First Name\"\n                  secondaryText={ firstName }\n                />\n                <ListItem\n                  primaryText=\"Last Name\"\n                  secondaryText={ lastName }\n                />\n                <ListItem\n                  primaryText=\"Email\"\n                  secondaryText={ email }\n                />\n                <ListItem\n                  primaryText=\"Occupation\"\n                  secondaryText={ occupations }\n                />\n                <ListItem\n                  primaryText=\"city\"\n                  secondaryText={ city }\n                />\n                <ListItem\n                  primaryText=\"Bio\"\n                  secondaryText={ bio }\n                />\n              </List>\n            <br/>\n            <RaisedButton\n              label=\"Confirm & Continue\"\n              primary={true}\n              style={styles.button}\n              onClick={this.continue}\n            />\n            <RaisedButton\n              label=\"Back\"\n              primary={false}\n              style={styles.button}\n              onClick={this.back}\n            />\n          </React.Fragment>\n        </MuiThemeProvider>\n      )\n  }\n}\n\nconst styles ={\n  button:{\n    margin:15\n  }\n}\nexport default Confirm;\n","import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\n\n\nclass Success extends Component {\n  render(){\n      return(\n        <MuiThemeProvider>\n          <React.Fragment>\n            <AppBar title=\"Success\"/>\n              <h1>Thank you for your Submission</h1>\n              <p>You will get an email with further\n              instructions</p>\n          </React.Fragment>\n        </MuiThemeProvider>\n      )\n  }\n}\n\nexport default Success;\n","import React, { Component } from 'react';\nimport FormUserDetails from './FormUserDetails';\nimport FormPersonalDetails from './FormPersonalDetails';\nimport Confirm from './Confirm';\nimport Success from './Success';\n\n\nclass UserForm extends Component {\n  state = {\n    step:1,\n    firstName:\"\",\n    lastName:\"\",\n    email:\"\",\n    occupations:\"\",\n    city:\"\",\n    bio:\"\"\n  }\n\n  nextStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step : step + 1\n    });\n  }\n\n  prevStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step : step - 1\n    });\n  }\n\nhandleChange = input => e => {\n  this.setState({[input] : e.target.value});\n}\nrender(){\n  const { step } = this.state;\n  const { firstName, lastName, email, occupations, city,bio} = this.state;\n  const values = {firstName, lastName, email, occupations,city,bio}\n\n  switch(step){\n    case 1:\n      return(\n        <FormUserDetails\n          nextStep={this.nextStep}\n          handleChange={this.handleChange}\n          values={values}\n        />\n    )\n    case 2:\n    return(\n      <FormPersonalDetails\n        nextStep={this.nextStep}\n        prevStep={this.prevStep}\n        handleChange={this.handleChange}\n        values={values}\n      />\n  )\n    case 3:\n      return <Confirm\n        nextStep={this.nextStep}\n        prevStep={this.prevStep}\n        values={values}\n        />\n    case 4:\n      return <Success/>\n\n  }\n}\n}\n\nexport default UserForm;\n","import React, { Component } from 'react';\nimport './App.css';\nimport UserForm from './components/UserForm';\n\nclass App extends Component{\n  render(){\n    return (\n      <div className=\"App\">\n        <UserForm/>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}